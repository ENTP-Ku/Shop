
### 1. **프로젝트 개요**
   - **목표**: 사용자가 편리하게 상품을 검색하고 구매할 수 있는 온라인 쇼핑몰 구축.
   - **기능 요약**: 
     - 사용자 인증 (로그인/회원가입)
     - 상품 카테고리 및 신상품 조회
     - 상품 상세 정보 제공 및 쇼핑 기능
     - 신규 상품 업로드 기능

---
### 2. **프론트엔드 개발**

#### **2.1. Home.js (쇼핑몰 메인 화면)**
   - **기능**: 
     - 상단에 ‘쇼핑몰’ 제목 출력 (h1 태그)
     - **로그인 상태**: 
       - JWT 토큰이 없을 경우: 로그인 버튼과 회원가입 버튼 표시.
       - 로그인 버튼 클릭 시 Login.js로 이동.
       - 회원가입 버튼 클릭 시 Register.js로 이동.
     - **로그인 후 상태**: 
       - '안녕하세요 (사용자의 아이디)' 메시지 출력.
       - 메뉴(nav 태그) 항목: '카테고리', '신상품' (li 태그로 가로 정렬).
         - **카테고리 메뉴**: 마우스 호버 시 하위 메뉴(상의, 하의, 공산주의) 출력.
         - **신상품 클릭 시**: Newproduct.js로 이동.
     - 상품 목록 출력:
       - `product` 테이블의 모든 레코드를 5열 격자로 출력 (image, name, price).
       - 이미지 클릭 시 해당 상품의 상세 정보로 Detail.js로 이동.

#### **2.2. Login.js (로그인 페이지)**
   - **기능**:
     - 아이디, 비밀번호 입력란, 로그인 버튼, 회원가입 버튼 존재.
     - **회원가입 버튼**: Register.js로 이동.
     - **로그인 버튼**: 입력값을 백엔드로 전송해 `users` 테이블과 비교.
       - 아이디가 존재하지 않으면 '존재하지 않는 아이디입니다.' alert 출력.
       - 아이디는 있지만 비밀번호가 틀리면 '비밀번호가 일치하지 않습니다.' alert 출력.
       - 로그인 성공 시 JWT 토큰 발급 및 Home.js로 이동.

#### **2.3. Register.js (회원가입 페이지)**
   - **기능**:
     - 아이디, 비밀번호, 비밀번호 확인, 고유번호 입력란, 가입 버튼 존재.
     - **가입 버튼**: 
       - 비밀번호 확인이 일치하지 않으면 '비밀번호가 일치하지 않습니다.' alert 출력.
       - 고유번호가 이미 존재하면 '이미 가입된 사용자입니다.' alert 출력.
       - 아이디가 이미 존재하면 '이미 사용중인 아이디입니다.' alert 출력.
       - 유효한 정보일 경우 `users` 테이블에 새로운 레코드 추가 및 Login.js로 이동.

#### **2.4. Detail.js (상품 상세 페이지)**
   - **기능**:
     - 클릭된 상품의 이미지 정보로 `product` 테이블에서 해당 상품의 레코드를 읽어와 상세 정보를 출력.

---

### 3. **백엔드 개발**

#### **3.1. 사용자 인증 (Login, Register)**
   - **JWT 인증**: 사용자 로그인 시 JWT 토큰을 발급해 세션 관리.
   - **회원가입 및 로그인**: 입력받은 정보로 데이터베이스 `users` 테이블과 비교 후 회원가입/로그인 처리.

#### **3.2. 상품 관리**
   - 상품 조회: `product` 테이블에서 상품 데이터를 가져와 사용자에게 제공.
   - 신상품 등록: 관리자 권한으로 신규 상품을 `product` 테이블에 업로드 가능.

#### **3.3. API 설계**
   - **GET /products**: 상품 목록을 가져오는 API.
   - **POST /login**: 로그인 정보 처리 및 JWT 토큰 발급.
   - **POST /register**: 사용자 회원가입 처리.
   - **GET /product/:id**: 특정 상품의 상세 정보를 가져오는 API.

---

### 4. **데이터베이스 설계**

#### **DB 이름**: `teammanding`
   - **username**: root
   - **password**: 1234

#### **테이블 설계**

##### **1. users 테이블**
   - **ID** (varchar, primary key)
   - **PW** (varchar)
   - **NO** (int, unique) - 고유번호

##### **2. product 테이블**
   - **ID** (int, primary key, auto_increment)
   - **image** (varchar) - 상품 이미지 경로
   - **name** (varchar) - 상품 이름
   - **price** (int) - 상품 가격
   - **category** (varchar) - 상품 카테고리 (상의, 하의, 기타)

