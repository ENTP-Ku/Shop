프론트엔드:

Home.js는 쇼핑몰의 시작화면이다.
상단 가운데 제목을 h1태그로 '쇼핑몰' 출력.
만약 jwt 토큰이 유효하지않은 상태라면
상단 우측에 로그인버튼, 회원가입버튼을 출력한다.
로그인버튼을 누르면 Login.js로 이동.
회원가입버튼을 누르면 Register.js로 이동.
만약 jwt 토큰이 유효한 상태라면
'안녕하세요 (사용자의 아이디)' 텍스트와 상품등록 버튼을 출력한다.
상품등록 버튼을 누르면 Upload.js로 이동
그 아래 메뉴를 nav태그로, 그 안에 li태그 2개를 만들고 가로로 나열, 각 요소를 하이퍼로 정한다.
li태그 각각의 내용은 카테고리, 신상품. 
카테고리 텍스트에 커서를 호버링하면 텍스트 아래로 안보이던 메뉴가 출력된다. 이 메뉴에도 li태그 3개를 만들고 세로로 나열, 각 요소를 하이퍼로 정한다.
li태그 각각의 내용은 상의, 하의, 공산주의 
메뉴에서 공산주의를 클릭하면 https://namu.wiki/w/%EA%B9%80%EC%A0%95%EC%9D%80 로 이동
그 아래에는 유동성 ui를 적용하여 상품을 나열한다
product 테이블의 모든 레코드를 image, name, price, kind 순서로 출력한다. 5열 격자로 출력한다.
메뉴에서 신상품을 클릭하면 product테이블에서 upload_data 칼럼에서 값이 가장 큰 5개 레코드를 출력한다
메뉴에서 상의를 클릭하면 product테이블에서 kind 칼럼이 top인 레코드를 전부 출력한다
메뉴에서 하의를 클릭하면 product테이블에서 kind 칼럼이 bottom인 레코드를 전부 출력한다
출력된 이미지는 하이퍼화 하고 클릭하면 해당 레코드의 image칼럼의 값을 useState로 저장한 상태로 Detail.js로 이동. 


Login.js
아이디 입력칸, 비밀번호 입력칸, 로그인 버튼, 회원가입 버튼이 존재한다.
회원가입 버튼을 누르면 Register.js로 이동.
로그인버튼을 누르면 입력된 값들을 백으로 보내고 users테이블의 내용과 비교한다.
아이디 입력칸의 값은 ID 칼럼과, 비밀번호 입력칸의 값은 PW 칼럼과 각각 비교한다.
입력받은 아이디값이 ID 칼럼에 존재하지않는다면, '존재하지않는 아이디입니다.' alert 출력.
입력받은 아이디값이 ID 칼럼에 존재하지만 해당 아이디 레코드의 PW칼럼과 입력받은 비밀번호가 일치하지 않는다면, '비밀번호가 일치하지 않습니다.' alert 출력.
입력받은 아이디값이 ID 칼럼에 존재하고 해당 아이디 레코드의 PW칼럼과 입력받은 비밀번호가 일치한다면, 백에서 생성된 jwt 토큰을 반환받고 저장한다. 그리고 Home.js로 이동


Register.js
아이디 입력칸, 비밀번호 입력칸, 비밀번호 확인 입력칸, 고유번호 입력칸, 가입 버튼이 존재한다.
가입버튼을 클릭했을때,
비밀번호 입력값과 비밀번호 확인 입력값이 일치하지않는다면, '비밀번호가 일치하지 않습니다.' alert 출력.
비밀번호 입력값과 비밀번호 확인 입력값이 일치한다면 아이디 입력값, 비밀번호 입력값, 고유번호 입력값을 백으로 보내서 users테이블의 내용과 비교한다
입력받은 고유번호값이 NO칼럼에 존재한다면 '이미 가입 된 사용자입니다.' alert출력.
입력받은 아이디값이 ID 칼럼에 존재한다면 '이미 사용중인 아이디입니다.' alert출력.
입력받은 고유번호값이 NO칼럽에 존재하지않고, 입력받은 아이디값이 ID 칼럼에 존재하지않는다면
아이디 입력값, 비밀번호 입력값, 고유번호 입력값을 백으로 보내서 users테이블에 레코드를 추가한다. 아이디 입력값을 ID 칼럼에, 비밀번호 입력값을 PW칼럼에, 고유번호 입력값을 NO칼럼에 추가한다. '환영합니다! 로그인 후 이용해주세요' alert 출력. Login.js로 이동.


Detail.js
useState에 저장해서 가져온 image칼럼의 값으로 product테이블의 레코드를 읽어온다.
왼쪽 상단에 레코드의 이미지를 20px의 여유를 두고 배치한다
이미지의 오른쪽에 name값을 출력
그 아래에 price값을 출력
그 아래에 kind 값을 출력
그 아래에 수량 선택란 출력
그 아래에 주문하기 버튼
(보류사항 : 주문하기 버튼을 누르면 결제창으로 이동)



Upload.js
input type=file 출력. 업로드 가능한 확장자는 png, jpg, gif.(product 테이블의 image칼럼에 저장)
input  type=select 출력. top, bottom 중에 선택가능(product 테이블의 kind칼럼에 저장)
제품명 입력칸 출력(product 테이블의 칼럼에 저장)
가격 입력칸 출력. 양의 자연수만 입력가능하다. 폼 오른쪽에 화폐단위 '원' 입력(product 테이블의 price칼럼에 저장)
업로드 버튼 출력.
업로드버튼을 클릭하면 product 테이블에 현재 시간과 입력된 값들이 하나의 레코드로 저장된다
현재 시간은 upload_data 칼럼에 저장한다.








백엔드:





Mysql:
DB이름: teammanding
username: root
password: 1234